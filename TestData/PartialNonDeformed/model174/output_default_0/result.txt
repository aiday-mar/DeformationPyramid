

data.keys() :  dict_keys(['src_pcd_list', 'tgt_pcd_list', 'points', 'neighbors', 'pools', 'upsamples', 'features', 'stack_lengths', 'coarse_matches', 'coarse_flow', 'src_mask', 'tgt_mask', 'src_ind_coarse_split', 'tgt_ind_coarse_split', 'src_ind_coarse', 'tgt_ind_coarse', 'batched_rot', 'batched_trn', 'sflow_list', 'correspondences_list', 'depth_paths_list', 'cam_intrin', 'src_pcd_colors_list', 's_pcd', 't_pcd', 'position_layers', 'src_feats_nopos', 'tgt_feats_nopos', 'src_feats', 'tgt_feats', 'conf_matrix_pred', 'coarse_match_pred', 'R_s2t_pred', 't_s2t_pred'])
coarse_flow.shape :  torch.Size([876, 3])
Before first compute_inlier_mask
s_pcd.shape :  torch.Size([1, 876, 3])
t_pcd.shape :  torch.Size([1, 850, 3])
batched_rot.shape :  torch.Size([1, 3, 3])
batched_trn.shape :  torch.Size([1, 3, 1])
batch_vec6d.shape :  torch.Size([1, 1626, 6])
batch_mask.shape :  torch.Size([1, 1626])
batch_index.shape :  torch.Size([1, 1626, 2])
vec_6d.shape :  torch.Size([1626, 6])
Entered into the case when intermediate_output_folder specified
When we do custom filtering
ldmk_s_np.shape :  (977, 3)
neighborhood_center_index :  0
neighborhood_center_source :  [0.31490165 0.6192789  0.8394589 ]
distance_to_neighborhood_center.shape :  (977,)
indices_minimum_distance :  [0]
indices_minimum_distance.shape :  (1,)
indices_second_minimum_distance :  [1]
indices_second_minimum_distance.shape :  (1,)
indices_third_minimum_distance :  [907 908]
indices_third_minimum_distance.shape :  (2,)
indices_1 :  [0]
indices_2 :  [0]
indices_3 :  [1]
np.where(distances_to_center < tau)[0].shape :  (62,)
point_indices_close_to_center.shape :  (62,)
source_points_close_to_center.shape :  (62, 3)
X :  [[0.31490165 0.61927891 0.83945888]
 [0.31729636 0.62322235 0.83908331]
 [0.30476826 0.61587471 0.842421  ]]
Y :  [[0.7496044  0.23042846 0.14856747]
 [0.73504579 0.23158161 0.15519531]
 [0.7496044  0.23042846 0.14856747]]
mean_X :  [0.31232209 0.61945866 0.84032106]
mean_Y :  [0.74475153 0.23081284 0.15077675]
(Y - mean_Y) :  [[ 0.00485287 -0.00038439 -0.00220928]
 [-0.00970574  0.00076877  0.00441856]
 [ 0.00485287 -0.00038439 -0.00220928]]
(X - mean_X) :  [[ 0.00257956 -0.00017975 -0.00086218]
 [ 0.00497427  0.0037637  -0.00123775]
 [-0.00755383 -0.00358395  0.00209993]]
R :  [[-0.92833929 -0.20485944  0.31019151]
 [ 0.31280069  0.02036908  0.94960035]
 [-0.20085292  0.97857943  0.04517076]]
t :  [ 0.90093389 -0.6774687  -0.43063989]
norm_error.shape :  (62,)
np.where(norm_error > thr)[0].shape :  (58,)
ldmk_s.shape :  torch.Size([258, 3])
len(final_indices) :  258
data[vec_6d][0].shape :  torch.Size([1626, 6])
data[vec_6d_mask][0].shape :  torch.Size([1626])
data[vec_6d_ind][0].shape :  torch.Size([1626, 2])
coarse_flow.shape :  torch.Size([876, 3])
s_pcd.shape :  torch.Size([1, 876, 3])
t_pcd.shape :  torch.Size([1, 850, 3])
batched_rot.shape :  torch.Size([1, 3, 3])
batched_trn.shape :  torch.Size([1, 3, 1])
batch_vec6d.shape :  torch.Size([1, 258, 6])
batch_mask.shape :  torch.Size([1, 258])
batch_index.shape :  torch.Size([1, 258, 2])
inlier_conf.shape :  torch.Size([1626])
self.landmarks[0].shape :  torch.Size([258, 3])
src_mean.shape :  torch.Size([1, 3])
0/1: full-epe: 24.604 
full-AccS: 7.214 
full-AccR: 25.887 
full-outlier: 35.687 
vis-epe: 38.161 
vis-AccS: 0.554 
vis-AccR: 2.236 
vis-outlier: 61.580 
occ-epe: 5.920 
occ-AccS: 16.393 
occ-AccR: 58.483 
occ-outlier: 0.000 

