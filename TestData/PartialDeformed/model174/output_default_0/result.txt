

data.keys() :  dict_keys(['src_pcd_list', 'tgt_pcd_list', 'points', 'neighbors', 'pools', 'upsamples', 'features', 'stack_lengths', 'coarse_matches', 'coarse_flow', 'src_mask', 'tgt_mask', 'src_ind_coarse_split', 'tgt_ind_coarse_split', 'src_ind_coarse', 'tgt_ind_coarse', 'batched_rot', 'batched_trn', 'sflow_list', 'correspondences_list', 'depth_paths_list', 'cam_intrin', 'src_pcd_colors_list', 's_pcd', 't_pcd', 'position_layers', 'src_feats_nopos', 'tgt_feats_nopos', 'src_feats', 'tgt_feats', 'conf_matrix_pred', 'coarse_match_pred', 'R_s2t_pred', 't_s2t_pred'])
coarse_flow.shape :  torch.Size([867, 3])
Before first compute_inlier_mask
s_pcd.shape :  torch.Size([1, 867, 3])
t_pcd.shape :  torch.Size([1, 844, 3])
batched_rot.shape :  torch.Size([1, 3, 3])
batched_trn.shape :  torch.Size([1, 3, 1])
batch_vec6d.shape :  torch.Size([1, 1354, 6])
batch_mask.shape :  torch.Size([1, 1354])
batch_index.shape :  torch.Size([1, 1354, 2])
vec_6d.shape :  torch.Size([1354, 6])
Entered into the case when intermediate_output_folder specified
When we do custom filtering
ldmk_s_np.shape :  (871, 3)
neighborhood_center_index :  0
neighborhood_center_source :  [0.15461877 0.75683343 0.5428874 ]
distance_to_neighborhood_center.shape :  (871,)
indices_minimum_distance :  [0]
indices_minimum_distance.shape :  (1,)
indices_second_minimum_distance :  [236 237 238]
indices_second_minimum_distance.shape :  (3,)
indices_third_minimum_distance :  [637 638]
indices_third_minimum_distance.shape :  (2,)
indices_1 :  [0]
indices_2 :  [1]
indices_3 :  [1]
np.where(distances_to_center < tau)[0].shape :  (108,)
point_indices_close_to_center.shape :  (108,)
source_points_close_to_center.shape :  (108, 3)
X :  [[0.15461877 0.75683343 0.54288739]
 [0.1457393  0.75294012 0.53268975]
 [0.15073463 0.7707743  0.54553938]]
Y :  [[0.40747479 0.5092963  0.29144937]
 [0.39839941 0.51514608 0.28260562]
 [0.40747479 0.5092963  0.29144937]]
mean_X :  [0.15036424 0.76018262 0.54037217]
mean_Y :  [0.40444966 0.51124622 0.28850145]
(Y - mean_Y) :  [[ 0.00302512 -0.00194993  0.00294792]
 [-0.00605025  0.00389985 -0.00589583]
 [ 0.00302512 -0.00194993  0.00294792]]
(X - mean_X) :  [[ 0.00425453 -0.00334918  0.00251522]
 [-0.00462493 -0.0072425  -0.00768242]
 [ 0.0003704   0.01059169  0.00516721]]
R :  [[ 0.27743885 -0.14904797  0.94911137]
 [ 0.60338743 -0.74172582 -0.29285904]
 [ 0.74763045  0.65393234 -0.11584988]]
t :  [-0.03683691  1.14261829 -0.25842138]
norm_error.shape :  (108,)
np.where(norm_error > thr)[0].shape :  (84,)
ldmk_s.shape :  torch.Size([125, 3])
len(final_indices) :  125
data[vec_6d][0].shape :  torch.Size([1354, 6])
data[vec_6d_mask][0].shape :  torch.Size([1354])
data[vec_6d_ind][0].shape :  torch.Size([1354, 2])
coarse_flow.shape :  torch.Size([867, 3])
s_pcd.shape :  torch.Size([1, 867, 3])
t_pcd.shape :  torch.Size([1, 844, 3])
batched_rot.shape :  torch.Size([1, 3, 3])
batched_trn.shape :  torch.Size([1, 3, 1])
batch_vec6d.shape :  torch.Size([1, 125, 6])
batch_mask.shape :  torch.Size([1, 125])
batch_index.shape :  torch.Size([1, 125, 2])
inlier_conf.shape :  torch.Size([1354])
self.landmarks[0].shape :  torch.Size([125, 3])
src_mean.shape :  torch.Size([1, 3])
0/1: full-epe: 19.819 
full-AccS: 0.862 
full-AccR: 7.013 
full-outlier: 47.940 
vis-epe: 29.187 
vis-AccS: 0.155 
vis-AccR: 1.742 
vis-outlier: 85.885 
occ-epe: 8.140 
occ-AccS: 1.743 
occ-AccR: 13.584 
occ-outlier: 0.636 

