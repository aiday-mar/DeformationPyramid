Partial Deformed
feature_extractor :  fcgf
feature extractor inside of get_dataloader :  fcgf
coarse_level :  None
feature extractor inside of collate_fn_4dmatch :  fcgf
coarse_level :  None


knn_matching :  False
confidence threshold used in the matching :  1e-06
preprocessing :  mutual
confidence threshold used in the matching :  1e-06
preprocessing :  mutual
ind.shape :  torch.Size([316, 3])
bi :  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], device='cuda:0')
si.shape :  torch.Size([316])
ti.shape :  torch.Size([316])
s_pos.shape :  torch.Size([316, 3])
t_pos.shape :  torch.Size([316, 3])
ind.shape :  torch.Size([316, 3])
bi :  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], device='cuda:0')
si.shape :  torch.Size([316])
ti.shape :  torch.Size([316])
s_pos.shape :  torch.Size([316, 3])
t_pos.shape :  torch.Size([316, 3])
number of true landmarks correspondences returned from FCGF based Lepard :  138  out of  316
fraction of true landmark correspondences returned from FCGF based Lepard :  0.43670886075949367
vec6d.shape :  torch.Size([316, 6])
ldmk_s.shape :  torch.Size([316, 3])
ldmk_t.shape :  torch.Size([316, 3])
number of true landmark correspondences returned from FCGF based Outlier Rejection :  138  out of  264
fraction of true landmark correspondences returned from FCGF based Outlier Rejection :  0.5227272727272727
Custom filtering is used
number of landmarks before custom filtering :  316
average distance :  0.00938726318160166
average distance multiplier :  3.0
number of unique source landmarks :  316
number of centers :  200
sampling :  linspace
number of neighborhood centers :  200
number of iterations of custom filtering :  1
inlier outlier threshold :  0.01
number of distinct source landmarks :  316
max_ldmks :  None
number of landmarks after custom filtering :  262
number of true landmark correspondences returned from custom filtering :  137  out of  262
fraction of true landmark correspondences returned from FCGF based custom filtering :  0.5229007633587787
fraction of true landmark correspondences returned from FCGF based custom filtering also returned from Lepard :  1.0
k0 :  -8
levels :  8
posenc function :  None
samples :  2000
src_ldmk.shape in optimize_deformation_pyramid :  torch.Size([262, 3])
strict threshold :  0.01
relaxed threhold :  0.03
outlier threshold :  0.1
strict threshold :  0.01
relaxed threhold :  0.03
outlier threshold :  0.1
strict threshold :  0.01
relaxed threhold :  0.03
outlier threshold :  0.1
0/1: full-epe: 9.235 
full-AccS: 0.255 
full-AccR: 9.161 
full-outlier: 91.222 
vis-epe: 10.809 
vis-AccS: 0.000 
vis-AccR: 0.000 
vis-outlier: 100.000 
occ-epe: 7.187 
occ-AccS: 0.587 
occ-AccR: 21.080 
occ-outlier: 79.800 

Actual rotation :  [[-0.81029619  0.58572329  0.0186628 ]
 [ 0.42981428  0.61565456 -0.66047646]
 [-0.39834628 -0.52716002 -0.75061478]]
Actual translation :  [0.2961076  0.17846237 1.41276713]
Predicted rotation :  [[-0.78273999  0.62090846  0.04231482]
 [ 0.49265406  0.65973229 -0.56749032]
 [-0.38027599 -0.42335085 -0.82229178]]
Predicted translation :  [-0.00777966  0.03540003 -0.01901482]
Relative Rotation Error :  0.1291945531391074
Relative Translation Error :  1.4706508280182142
strict inlier ratio threshold :  0.01
relaxed inlier ratio threshold :  0.03
RMSE :  0.061620655511000814
Strict IR :  0.23500893084970656
Relaxed IR :  0.5325338096453177
